{
  "openapi": "3.0.3",
  "info": {
    "title": "Reflect Money API",
    "description": "API for accessing Reflect Protocol data.\n\n## Rate Limiting\n- **Unauthenticated users**: 30 requests per minute\n- **Authenticated integrators**: 600 requests per minute\n\n## Authentication\nTo access higher rate limits, include your API key in the `X-API-Key` header. API keys can be obtained through the integration management endpoints.",
    "version": "1.1.0",
    "contact": {
      "name": "Reflect Money",
      "url": "https://reflect.money"
    }
  },
  "servers": [
    {
      "url": "https://api.reflect.money",
      "description": "Production server"
    }
  ],
  "security": [
    {
      "rateLimit": []
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health check",
        "description": "Check if the API is running and healthy. Rate limit: 30 requests per minute (unauthenticated), 600 requests per minute (authenticated).",
        "tags": ["Health"],
        "responses": {
          "200": {
            "description": "API is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "API is running"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-01-01T00:00:00.000Z"
                    }
                  },
                  "required": ["success", "message", "timestamp"]
                }
              }
            }
          }
        }
      }
    },
    "/funding/rates": {
      "get": {
        "summary": "Get funding rates",
        "description": "Retrieve funding rates data with optional period and market filters. Rate limit: 30 requests per minute (unauthenticated), 600 requests per minute (authenticated).",
        "tags": ["Funding"],
        "parameters": [
          {
            "name": "period",
            "in": "query",
            "description": "Time period for funding rates data",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["day", "week", "month", "year"],
              "default": "year"
            }
          },
          {
            "name": "market",
            "in": "query",
            "description": "Specific market to filter by",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "SOL-PERP"
          }
        ],
        "responses": {
          "200": {
            "description": "Funding rates data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FundingRateData"
                      }
                    },
                    "count": {
                      "type": "integer",
                      "description": "Number of data points returned",
                      "example": 365
                    },
                    "period": {
                      "type": "string",
                      "enum": ["day", "week", "month", "year"],
                      "example": "year"
                    },
                    "market": {
                      "type": "string",
                      "description": "Market filter applied (if any)",
                      "example": "SOL-PERP"
                    }
                  },
                  "required": ["success", "data", "count", "period"]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/funding/markets": {
      "get": {
        "summary": "Get available markets",
        "description": "Retrieve list of available markets for funding rates",
        "tags": ["Funding"],
        "responses": {
          "200": {
            "description": "Available markets retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "markets": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["SOL-PERP", "BTC-PERP", "ETH-PERP"]
                    },
                    "count": {
                      "type": "integer",
                      "description": "Number of available markets",
                      "example": 3
                    }
                  },
                  "required": ["success", "markets", "count"]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },

    "/apy": {
      "get": {
        "summary": "Get APY for all stablecoins",
        "description": "Retrieve APY data for all three stablecoins. Can return either realtime or historical data. Rate limit: 30 requests per minute (unauthenticated), 600 requests per minute (authenticated).",
        "tags": ["APY"],
        "parameters": [
          {
            "name": "historical",
            "in": "query",
            "description": "Set to 'true' for historical data (365 days annualized), omit for realtime data",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["true", "false"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved APY data for all stablecoins",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllStablecoinsResponse"
                },
                "example": {
                  "success": true,
                  "data": {
                    "stablecoins": {
                      "0": {
                        "stablecoin": 0,
                        "type": "realtime",
                        "apy_bps": 500,
                        "timestamp": "2024-01-01T00:00:00.000Z"
                      },
                      "1": {
                        "stablecoin": 1,
                        "type": "realtime",
                        "apy_bps": 1200,
                        "jlp_yield_bps": 1000,
                        "funding_rate_adjustment_bps": 200,
                        "timestamp": "2024-01-01T00:00:00.000Z",
                        "funding_rates": {
                          "SOL-PERP": 150,
                          "BTC-PERP": 100,
                          "ETH-PERP": 80
                        }
                      },
                      "2": {
                        "stablecoin": 2,
                        "type": "realtime",
                        "apy_bps": 600,
                        "lst_yield_bps": 800,
                        "sol_funding_rate_bps": 200,
                        "timestamp": "2024-01-01T00:00:00.000Z"
                      }
                    },
                    "summary": {
                      "usdc_apy_bps": 500,
                      "jlp_apy_bps": 1200,
                      "lst_apy_bps": 600
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No APY data found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apy/{stablecoin}": {
      "get": {
        "summary": "Get APY for specific stablecoin",
        "description": "Retrieve APY data for a specific stablecoin. Can return either realtime or historical data.",
        "tags": ["APY"],
        "parameters": [
          {
            "name": "stablecoin",
            "in": "path",
            "description": "Stablecoin number (0: USDC Rates, 1: JLP Yields with Funding Rate Hedging, 2: Delta-Neutral LST Stablecoin)",
            "required": true,
            "schema": {
              "type": "integer",
              "enum": [0, 1, 2]
            }
          },
          {
            "name": "historical",
            "in": "query",
            "description": "Set to 'true' for historical data (365 days annualized), omit for realtime data",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["true", "false"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved APY data",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/UsdcApyResponse"
                    },
                    {
                      "$ref": "#/components/schemas/JlpApyResponse"
                    },
                    {
                      "$ref": "#/components/schemas/LstApyResponse"
                    }
                  ]
                },
                "examples": {
                  "usdc_realtime": {
                    "summary": "USDC Stablecoin - Realtime",
                    "value": {
                      "success": true,
                      "data": {
                        "stablecoin": 0,
                        "type": "realtime",
                        "apy_bps": 500,
                        "timestamp": "2024-01-01T00:00:00.000Z"
                      }
                    }
                  },
                  "jlp_realtime": {
                    "summary": "JLP Stablecoin - Realtime",
                    "value": {
                      "success": true,
                      "data": {
                        "stablecoin": 1,
                        "type": "realtime",
                        "apy_bps": 1200,
                        "jlp_yield_bps": 1000,
                        "funding_rate_adjustment_bps": 200,
                        "timestamp": "2024-01-01T00:00:00.000Z",
                        "funding_rates": {
                          "SOL-PERP": 150,
                          "BTC-PERP": 100,
                          "ETH-PERP": 80
                        }
                      }
                    }
                  },
                  "lst_realtime": {
                    "summary": "LST Stablecoin - Realtime",
                    "value": {
                      "success": true,
                      "data": {
                        "stablecoin": 2,
                        "type": "realtime",
                        "apy_bps": 600,
                        "lst_yield_bps": 800,
                        "sol_funding_rate_bps": 200,
                        "timestamp": "2024-01-01T00:00:00.000Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid stablecoin parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "success": false,
                  "message": "Invalid stablecoin. Must be 0, 1, or 2"
                }
              }
            }
          },
          "404": {
            "description": "No APY data found for the specified stablecoin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "success": false,
                  "message": "No USDC rate data found"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apy/{stablecoin}/historical": {
      "get": {
        "summary": "Get historical APY for specific stablecoin",
        "description": "Retrieve historical APY data for a specific stablecoin (365 days annualized).",
        "tags": ["APY"],
        "parameters": [
          {
            "name": "stablecoin",
            "in": "path",
            "description": "Stablecoin number (0: USDC Rates, 1: JLP Yields with Funding Rate Hedging, 2: Delta-Neutral LST Stablecoin)",
            "required": true,
            "schema": {
              "type": "integer",
              "enum": [0, 1, 2]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved historical APY data",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/UsdcHistoricalResponse"
                    },
                    {
                      "$ref": "#/components/schemas/JlpHistoricalResponse"
                    },
                    {
                      "$ref": "#/components/schemas/LstHistoricalResponse"
                    }
                  ]
                },
                "examples": {
                  "usdc_historical": {
                    "summary": "USDC Stablecoin - Historical",
                    "value": {
                      "success": true,
                      "data": {
                        "stablecoin": 0,
                        "type": "historical",
                        "apy_bps": 450,
                        "data_points": 365,
                        "start_date": "2023-01-01T00:00:00.000Z",
                        "end_date": "2024-01-01T00:00:00.000Z"
                      }
                    }
                  },
                  "jlp_historical": {
                    "summary": "JLP Stablecoin - Historical",
                    "value": {
                      "success": true,
                      "data": {
                        "stablecoin": 1,
                        "type": "historical",
                        "apy_bps": 1150,
                        "jlp_yield_bps": 950,
                        "funding_rate_adjustment_bps": 200,
                        "data_points": 365,
                        "start_date": "2023-01-01T00:00:00.000Z",
                        "end_date": "2024-01-01T00:00:00.000Z",
                        "funding_rates": {
                          "SOL-PERP": 140,
                          "BTC-PERP": 95,
                          "ETH-PERP": 75
                        }
                      }
                    }
                  },
                  "lst_historical": {
                    "summary": "LST Stablecoin - Historical",
                    "value": {
                      "success": true,
                      "data": {
                        "stablecoin": 2,
                        "type": "historical",
                        "apy_bps": 550,
                        "lst_yield_bps": 750,
                        "sol_funding_rate_bps": 200,
                        "data_points": 365,
                        "start_date": "2023-01-01T00:00:00.000Z",
                        "end_date": "2024-01-01T00:00:00.000Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid stablecoin parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                                  "example": {
                    "success": false,
                    "message": "Invalid stablecoin. Must be 0, 1, or 2"
                  }
              }
            }
          },
          "404": {
            "description": "No historical APY data found for the specified stablecoin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "success": false,
                  "message": "No historical APY data found for stablecoin 1"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "success": false,
                  "message": "Failed to retrieve historical APY data: Service unavailable"
                }
              }
            }
          }
        }
      }
    },
    "/stablecoin/mint": {
      "post": {
        "summary": "Generate mint transaction",
        "description": "Generate a mint transaction for stablecoins using the Reflect Money SDK. Rate limit: 30 requests per minute (unauthenticated), 600 requests per minute (authenticated).",
        "tags": ["Stablecoin"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "stablecoinIndex": {
                    "type": "integer",
                    "description": "Stablecoin index (0: USDC+, 2: LST)",
                    "enum": [0, 2],
                    "example": 2
                  },
                  "depositAmount": {
                    "type": "number",
                    "description": "Amount to mint in smallest unit",
                    "example": 1000000
                  },
                  "signer": {
                    "type": "string",
                    "description": "User's Solana wallet address",
                    "example": "9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM"
                  },
                  "minimumReceived": {
                    "type": "number",
                    "description": "Minimum amount to receive (slippage protection)",
                    "example": 999000
                  },
                  "collateralMint": {
                    "type": "string",
                    "description": "Collateral mint address (required only when stablecoinIndex is 2 for LST stablecoin)",
                    "example": "RSoLp7kddnNwvvvaz4b1isQy8vcqdSwXjgm1wXaMhD8"
                  }
                },
                "required": ["stablecoinIndex", "depositAmount", "signer"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Mint transaction generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "success": false,
                  "message": "Invalid request data: depositAmount must be positive"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "success": false,
                  "message": "Failed to generate mint transaction: Collateral mint address is required for LST stablecoin"
                }
              }
            }
          }
        }
      }
    },
    "/stablecoin/burn": {
      "post": {
        "summary": "Generate burn transaction",
        "description": "Generate a burn transaction for stablecoins using the Reflect Money SDK",
        "tags": ["Stablecoin"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "stablecoinIndex": {
                    "type": "integer",
                    "description": "Stablecoin index (0: USDC+, 2: LST)",
                    "enum": [0, 2],
                    "example": 0
                  },
                  "depositAmount": {
                    "type": "number",
                    "description": "Amount to burn in smallest unit",
                    "example": 1000000
                  },
                  "signer": {
                    "type": "string",
                    "description": "User's Solana wallet address",
                    "example": "9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM"
                  },
                  "minimumReceived": {
                    "type": "number",
                    "description": "Minimum amount to receive (slippage protection)",
                    "example": 999000
                  },
                  "collateralMint": {
                    "type": "string",
                    "description": "Collateral mint address (required only when stablecoinIndex is 2 for LST stablecoin)",
                    "example": "RSoLp7kddnNwvvvaz4b1isQy8vcqdSwXjgm1wXaMhD8"
                  }
                },
                "required": ["stablecoinIndex", "depositAmount", "signer"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Burn transaction generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "success": false,
                  "message": "Invalid request data: depositAmount must be positive"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "success": false,
                  "message": "Failed to generate burn transaction: Collateral mint address is required for LST stablecoin"
                }
              }
            }
          }
        }
      }
    },
    "/stablecoin/types": {
      "get": {
        "summary": "Get available stablecoin types",
        "description": "Retrieve list of available stablecoin types",
        "tags": ["Stablecoin"],
        "responses": {
          "200": {
            "description": "Available stablecoin types retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "index": {
                            "type": "integer",
                            "description": "Stablecoin index",
                            "example": 0
                          },
                          "name": {
                            "type": "string",
                            "description": "Stablecoin name",
                            "example": "USDC+"
                          }
                        },
                        "required": ["index", "name"]
                      },
                      "example": [
                        { "index": 0, "name": "USDC+" },
                        { "index": 2, "name": "LST" }
                      ]
                    }
                  },
                  "required": ["success", "data"]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/stablecoin/limits": {
      "get": {
        "summary": "Get supply cap information for all stablecoins",
        "description": "Retrieve supply caps, current supply, and remaining capacity for all stablecoins",
        "tags": ["Stablecoin"],
        "responses": {
          "200": {
            "description": "Supply cap information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "0": {
                          "$ref": "#/components/schemas/SupplyCapInfo"
                        },
                        "2": {
                          "$ref": "#/components/schemas/SupplyCapInfo"
                        }
                      },
                      "example": {
                        "0": {
                          "supplyCap": 1000000000,
                          "currentSupply": 500000000,
                          "remainingCapacity": 500000000,
                          "utilizationPercentage": 50.0
                        },
                        "2": {
                          "supplyCap": 500000000,
                          "currentSupply": 300000000,
                          "remainingCapacity": 200000000,
                          "utilizationPercentage": 60.0
                        }
                      }
                    }
                  },
                  "required": ["success", "data"]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "success": false,
                  "message": "Failed to retrieve supply cap information: RPC connection error"
                }
              }
            }
          }
        }
      }
    },
    "/stablecoin/exchange-rates/historical": {
      "get": {
        "summary": "Get historical exchange rates for a stablecoin",
        "description": "Retrieve historical base and receipt exchange rates for a specific stablecoin (0: USDC+, 2: LST) and period (day, week, month, year).",
        "tags": ["Stablecoin"],
        "parameters": [
          {
            "name": "stablecoin",
            "in": "query",
            "description": "Stablecoin index (0: USDC+, 2: LST)",
            "required": true,
            "schema": {
              "type": "integer",
              "enum": [0, 2]
            }
          },
          {
            "name": "period",
            "in": "query",
            "description": "Time period for historical data",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["day", "week", "month", "year"],
              "default": "year"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Historical exchange rates retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "integer" },
                          "stablecoin": { "type": "integer", "enum": [0, 2] },
                          "base_usd_value_bps": { "type": "number", "description": "Base exchange rate in bps" },
                          "receipt_usd_value_bps": { "type": "number", "description": "Receipt exchange rate in bps" },
                          "timestamp": { "type": "string", "format": "date-time" }
                        },
                        "required": ["id", "stablecoin", "base_usd_value_bps", "receipt_usd_value_bps", "timestamp"]
                      }
                    }
                  },
                  "required": ["success", "data"]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/stablecoin/exchange-rates/realtime": {
      "get": {
        "summary": "Get real-time exchange rate for a stablecoin",
        "description": "Retrieve the latest base and receipt exchange rates for a specific stablecoin (0: USDC+, 2: LST).",
        "tags": ["Stablecoin"],
        "parameters": [
          {
            "name": "stablecoin",
            "in": "query",
            "description": "Stablecoin index (0: USDC+, 2: LST)",
            "required": true,
            "schema": {
              "type": "integer",
              "enum": [0, 2]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Latest exchange rate retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer" },
                        "stablecoin": { "type": "integer", "enum": [0, 2] },
                        "base_usd_value_bps": { "type": "number", "description": "Base exchange rate in bps" },
                        "receipt_usd_value_bps": { "type": "number", "description": "Receipt exchange rate in bps" },
                        "timestamp": { "type": "string", "format": "date-time" }
                      },
                      "required": ["id", "stablecoin", "base_usd_value_bps", "receipt_usd_value_bps", "timestamp"]
                    }
                  },
                  "required": ["success", "data"]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/stablecoin/exchange-rates": {
      "get": {
        "summary": "Get latest exchange rates for all stablecoins",
        "description": "Retrieve the latest base and receipt exchange rates for all supported stablecoins (USDC+, LST).",
        "tags": ["Stablecoin"],
        "responses": {
          "200": {
            "description": "Latest exchange rates for all stablecoins retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "integer" },
                          "stablecoin": { "type": "integer", "enum": [0, 2] },
                          "base_usd_value_bps": { "type": "number", "description": "Base exchange rate in bps" },
                          "receipt_usd_value_bps": { "type": "number", "description": "Receipt exchange rate in bps" },
                          "timestamp": { "type": "string", "format": "date-time" }
                        },
                        "required": ["id", "stablecoin", "base_usd_value_bps", "receipt_usd_value_bps", "timestamp"]
                      }
                    }
                  },
                  "required": ["success", "data"]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/integration/{id}/api-key": {
      "post": {
        "summary": "Regenerate API key",
        "description": "Regenerate API key for an integration",
        "tags": ["Integration"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Integration ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "API key regenerated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid integration ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/integration/mint": {
      "post": {
        "summary": "Generate mint transaction",
        "description": "Generate a mint transaction for integration stablecoins. Rate limit: 30 requests per minute (unauthenticated), 600 requests per minute (authenticated).",
        "tags": ["Integration"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "description": "Amount to mint",
                    "example": 1000000
                  },
                  "recipient": {
                    "type": "string",
                    "description": "Recipient Solana wallet address",
                    "example": "9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM"
                  },
                  "integrationId": {
                    "type": "string",
                    "description": "Integration ID",
                    "example": "int_12345"
                  }
                },
                "required": ["amount", "recipient", "integrationId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Mint transaction generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/integration/redeem": {
      "post": {
        "summary": "Generate redemption transaction",
        "description": "Generate a redemption transaction for integration stablecoins",
        "tags": ["Integration"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "description": "Amount to redeem",
                    "example": 1000000
                  },
                  "redeemer": {
                    "type": "string",
                    "description": "Redeemer Solana wallet address",
                    "example": "9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM"
                  },
                  "integrationId": {
                    "type": "string",
                    "description": "Integration ID",
                    "example": "int_12345"
                  }
                },
                "required": ["amount", "redeemer", "integrationId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Redemption transaction generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/integration/{id}/stats": {
      "get": {
        "summary": "Get integration statistics",
        "description": "Retrieve statistics for a specific integration",
        "tags": ["Integration"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Integration ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Integration statistics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationStatsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid integration ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/integration/{id}/stats/historical": {
      "get": {
        "summary": "Get historical integration statistics",
        "description": "Retrieve historical statistics for a specific integration",
        "tags": ["Integration"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Integration ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "query",
            "description": "Time period for historical data",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["7d", "30d", "90d", "1y"],
              "default": "30d"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Historical integration statistics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricalStatsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid integration ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/integration/{id}/config": {
      "get": {
        "summary": "Get integration configuration",
        "description": "Retrieve configuration for a specific integration",
        "tags": ["Integration"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Integration ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Integration configuration retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationConfigResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid integration ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update integration configuration",
        "description": "Update configuration for a specific integration",
        "tags": ["Integration"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Integration ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateConfigRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Integration configuration updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationConfigResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/integration/{id}/exchange-rate": {
      "get": {
        "summary": "Get current exchange rate",
        "description": "Retrieve current exchange rate for a specific integration",
        "tags": ["Integration"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Integration ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Exchange rate retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExchangeRateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid integration ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/integration/claim": {
      "post": {
        "summary": "Generate claim transaction",
        "description": "Generate a claim transaction for integration rewards",
        "tags": ["Integration"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "description": "Amount to claim",
                    "example": 1000000
                  },
                  "integrationId": {
                    "type": "string",
                    "description": "Integration ID",
                    "example": "int_12345"
                  }
                },
                "required": ["amount", "integrationId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Claim transaction generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "rateLimit": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key",
        "description": "API key for authenticated integrators. Unauthenticated users are limited to 30 requests per minute, authenticated integrators are limited to 600 requests per minute."
      }
    },
    "schemas": {
      "BaseResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Whether the request was successful"
          }
        },
        "required": ["success"]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Whether the request was successful",
            "example": false
          },
          "message": {
            "type": "string",
            "description": "Error message describing what went wrong",
            "example": "Invalid request data: depositAmount must be positive"
          }
        },
        "required": ["success", "message"]
      },
      "FundingRateData": {
        "type": "object",
        "properties": {
          "market": {
            "type": "string",
            "description": "Market identifier",
            "example": "SOL-PERP"
          },
          "funding_rate_bps": {
            "type": "integer",
            "description": "Funding rate in basis points",
            "example": 150
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of the funding rate",
            "example": "2024-01-01T00:00:00.000Z"
          }
        },
        "required": ["market", "funding_rate_bps", "timestamp"]
      },
      "UsdcApyResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/UsdcApyData"
              }
            },
            "required": ["data"]
          }
        ]
      },
      "UsdcApyData": {
        "type": "object",
        "properties": {
          "stablecoin": {
            "type": "integer",
            "enum": [0],
            "description": "Stablecoin number (0: USDC Rates)"
          },
          "type": {
            "type": "string",
            "enum": ["realtime", "historical"],
            "description": "Type of data returned"
          },
          "apy_bps": {
            "type": "integer",
            "description": "APY in basis points (100 bps = 1%)"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of the data point (for realtime data)"
          },
          "data_points": {
            "type": "integer",
            "description": "Number of data points used in calculation (for historical data)"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "Start date of the historical period (for historical data)"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "description": "End date of the historical period (for historical data)"
          }
        },
        "required": ["stablecoin", "type", "apy_bps"]
      },
      "JlpApyResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/JlpApyData"
              }
            },
            "required": ["data"]
          }
        ]
      },
      "JlpApyData": {
        "type": "object",
        "properties": {
          "stablecoin": {
            "type": "integer",
            "enum": [1],
            "description": "Stablecoin number (1: JLP Yields with Funding Rate Hedging)"
          },
          "type": {
            "type": "string",
            "enum": ["realtime", "historical"],
            "description": "Type of data returned"
          },
          "apy_bps": {
            "type": "integer",
            "description": "APY in basis points (100 bps = 1%)"
          },
          "jlp_yield_bps": {
            "type": "integer",
            "description": "Base JLP yield in basis points"
          },
          "funding_rate_adjustment_bps": {
            "type": "integer",
            "description": "Funding rate adjustment in basis points"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of the data point (for realtime data)"
          },
          "funding_rates": {
            "type": "object",
            "description": "Funding rates by market",
            "additionalProperties": {
              "type": "integer"
            }
          },
          "data_points": {
            "type": "integer",
            "description": "Number of data points used in calculation (for historical data)"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "Start date of the historical period (for historical data)"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "description": "End date of the historical period (for historical data)"
          }
        },
        "required": ["stablecoin", "type", "apy_bps", "jlp_yield_bps", "funding_rate_adjustment_bps"]
      },
      "LstApyResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/LstApyData"
              }
            },
            "required": ["data"]
          }
        ]
      },
      "LstApyData": {
        "type": "object",
        "properties": {
          "stablecoin": {
            "type": "integer",
            "enum": [2],
            "description": "Stablecoin number (2: Delta-Neutral LST Stablecoin)"
          },
          "type": {
            "type": "string",
            "enum": ["realtime", "historical"],
            "description": "Type of data returned"
          },
          "apy_bps": {
            "type": "integer",
            "description": "APY in basis points (100 bps = 1%)"
          },
          "lst_yield_bps": {
            "type": "integer",
            "description": "LST yield in basis points"
          },
          "sol_funding_rate_bps": {
            "type": "integer",
            "description": "SOL funding rate in basis points"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of the data point (for realtime data)"
          },
          "data_points": {
            "type": "integer",
            "description": "Number of data points used in calculation (for historical data)"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "Start date of the historical period (for historical data)"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "description": "End date of the historical period (for historical data)"
          }
        },
        "required": ["stablecoin", "type", "apy_bps", "lst_yield_bps", "sol_funding_rate_bps"]
      },
      "UsdcHistoricalResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/UsdcApyData"
              }
            },
            "required": ["data"]
          }
        ]
      },
      "JlpHistoricalResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/JlpApyData"
              }
            },
            "required": ["data"]
          }
        ]
      },
      "LstHistoricalResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/LstApyData"
              }
            },
            "required": ["data"]
          }
        ]
      },
      "AllStablecoinsResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "stablecoins": {
                    "type": "object",
                    "properties": {
                      "0": {
                        "$ref": "#/components/schemas/UsdcApyData"
                      },
                      "1": {
                        "$ref": "#/components/schemas/JlpApyData"
                      },
                      "2": {
                        "$ref": "#/components/schemas/LstApyData"
                      }
                    },
                    "required": ["0", "1", "2"]
                  },
                  "summary": {
                    "type": "object",
                    "properties": {
                      "usdc_apy_bps": {
                        "type": "integer",
                        "description": "USDC stablecoin APY in basis points"
                      },
                      "jlp_apy_bps": {
                        "type": "integer",
                        "description": "JLP stablecoin APY in basis points"
                      },
                      "lst_apy_bps": {
                        "type": "integer",
                        "description": "LST stablecoin APY in basis points"
                      }
                    },
                    "required": ["usdc_apy_bps", "jlp_apy_bps", "lst_apy_bps"]
                  }
                },
                "required": ["stablecoins", "summary"]
              }
            },
            "required": ["data"]
          }
        ]
      },
      "TransactionResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "transaction": {
                    "type": "string",
                    "description": "Base64 encoded transaction",
                    "example": "AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAED..."
                  }
                },
                "required": ["transaction"]
              }
            },
            "required": ["data"]
          }
        ]
      },
      "SupplyCapInfo": {
        "type": "object",
        "properties": {
          "supplyCap": {
            "type": "integer",
            "description": "Total supply cap in smallest units",
            "example": 1000000000
          },
          "currentSupply": {
            "type": "integer",
            "description": "Current supply in smallest units",
            "example": 500000000
          },
          "remainingCapacity": {
            "type": "integer",
            "description": "Remaining capacity before hitting cap",
            "example": 500000000
          },
          "utilizationPercentage": {
            "type": "number",
            "format": "float",
            "description": "Percentage of cap currently utilized",
            "example": 50.0
          }
        },
        "required": ["supplyCap", "currentSupply", "remainingCapacity", "utilizationPercentage"]
      },
      "ApiKeyResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "apiKey": {
                    "type": "string",
                    "description": "Generated API key",
                    "example": "sk_live_1234567890abcdef"
                  },
                  "expiresAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Expiration timestamp",
                    "example": "2024-12-31T23:59:59.000Z"
                  }
                },
                "required": ["apiKey", "expiresAt"]
              }
            },
            "required": ["data"]
          }
        ]
      },
      "IntegrationStatsResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "totalSupply": {
                    "type": "number",
                    "description": "Total supply of integration stablecoins",
                    "example": 1000000000
                  },
                  "totalUsers": {
                    "type": "number",
                    "description": "Total number of users",
                    "example": 1500
                  },
                  "totalPrincipal": {
                    "type": "number",
                    "description": "Total principal amount",
                    "example": 950000000
                  },
                  "totalYieldGenerated": {
                    "type": "number",
                    "description": "Total yield generated",
                    "example": 50000000
                  },
                  "historicalData": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "date": {
                          "type": "string",
                          "format": "date",
                          "example": "2024-01-01"
                        },
                        "supply": {
                          "type": "number",
                          "example": 1000000000
                        },
                        "users": {
                          "type": "number",
                          "example": 1500
                        },
                        "principal": {
                          "type": "number",
                          "example": 950000000
                        },
                        "yield": {
                          "type": "number",
                          "example": 50000000
                        }
                      },
                      "required": ["date", "supply", "users", "principal", "yield"]
                    }
                  }
                },
                "required": ["totalSupply", "totalUsers", "totalPrincipal", "totalYieldGenerated", "historicalData"]
              }
            },
            "required": ["data"]
          }
        ]
      },
      "HistoricalStatsResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "period": {
                    "type": "string",
                    "enum": ["7d", "30d", "90d", "1y"],
                    "example": "30d"
                  },
                  "historicalData": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "date": {
                          "type": "string",
                          "format": "date",
                          "example": "2024-01-01"
                        },
                        "supply": {
                          "type": "number",
                          "example": 1000000000
                        },
                        "users": {
                          "type": "number",
                          "example": 1500
                        },
                        "principal": {
                          "type": "number",
                          "example": 950000000
                        },
                        "yield": {
                          "type": "number",
                          "example": 50000000
                        }
                      },
                      "required": ["date", "supply", "users", "principal", "yield"]
                    }
                  }
                },
                "required": ["period", "historicalData"]
              }
            },
            "required": ["data"]
          }
        ]
      },
      "IntegrationConfigResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "permissions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": ["mint", "redeem", "claim"]
                  },
                  "administrators": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "publicKey": {
                          "type": "string",
                          "description": "Administrator's Solana public key",
                          "example": "9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM"
                        },
                        "permissionLevel": {
                          "type": "string",
                          "enum": ["superadmin", "manager", "viewer"],
                          "example": "superadmin"
                        }
                      },
                      "required": ["publicKey", "permissionLevel"]
                    }
                  },
                  "yieldBreakdownBps": {
                    "type": "object",
                    "properties": {
                      "integrator": {
                        "type": "number",
                        "description": "Integrator's share in basis points",
                        "example": 200
                      },
                      "user": {
                        "type": "number",
                        "description": "User's share in basis points",
                        "example": 9800
                      }
                    },
                    "required": ["integrator", "user"]
                  },
                  "underlyingStablecoin": {
                    "type": "string",
                    "description": "Underlying stablecoin address",
                    "example": "EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v"
                  },
                  "integrationIndex": {
                    "type": "number",
                    "description": "Integration index",
                    "example": 1
                  },
                  "metadata": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "My Integration"
                      },
                      "symbol": {
                        "type": "string",
                        "example": "MI"
                      },
                      "description": {
                        "type": "string",
                        "example": "A custom integration stablecoin"
                      },
                      "logoUrl": {
                        "type": "string",
                        "format": "uri",
                        "example": "https://example.com/logo.png"
                      },
                      "websiteUrl": {
                        "type": "string",
                        "format": "uri",
                        "example": "https://example.com"
                      }
                    },
                    "required": ["name", "symbol", "description"]
                  }
                },
                "required": ["permissions", "administrators", "yieldBreakdownBps", "underlyingStablecoin", "integrationIndex", "metadata"]
              }
            },
            "required": ["data"]
          }
        ]
      },
      "UpdateConfigRequest": {
        "type": "object",
        "properties": {
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of permissions",
            "example": ["mint", "redeem", "claim"]
          },
          "administrators": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "publicKey": {
                  "type": "string",
                  "description": "Administrator's Solana public key",
                  "example": "9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM"
                },
                "permissionLevel": {
                  "type": "string",
                  "enum": ["superadmin", "manager", "viewer"],
                  "example": "superadmin"
                }
              },
              "required": ["publicKey", "permissionLevel"]
            }
          },
          "yieldBreakdownBps": {
            "type": "object",
            "properties": {
              "integrator": {
                "type": "number",
                "description": "Integrator's share in basis points (0-10000)",
                "minimum": 0,
                "maximum": 10000,
                "example": 200
              },
              "user": {
                "type": "number",
                "description": "User's share in basis points (0-10000)",
                "minimum": 0,
                "maximum": 10000,
                "example": 9800
              }
            },
            "description": "Yield breakdown in basis points (must sum to 10000)"
          },
          "metadata": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Integration name"
              },
              "symbol": {
                "type": "string",
                "description": "Integration symbol"
              },
              "description": {
                "type": "string",
                "description": "Integration description"
              },
              "logoUrl": {
                "type": "string",
                "format": "uri",
                "description": "Logo URL"
              },
              "websiteUrl": {
                "type": "string",
                "format": "uri",
                "description": "Website URL"
              }
            }
          }
        }
      },
      "ExchangeRateResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "integrationId": {
                    "type": "string",
                    "description": "Integration ID",
                    "example": "int_12345"
                  },
                  "underlyingStablecoin": {
                    "type": "string",
                    "description": "Underlying stablecoin address",
                    "example": "EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v"
                  },
                  "rateToUnderlying": {
                    "type": "number",
                    "description": "Rate of integration stablecoin to underlying stablecoin",
                    "example": 1.02
                  },
                  "rateToUsd": {
                    "type": "number",
                    "description": "Rate of underlying stablecoin to USD",
                    "example": 1.0
                  },
                  "timestamp": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp of the exchange rate",
                    "example": "2024-01-01T00:00:00.000Z"
                  }
                },
                "required": ["integrationId", "underlyingStablecoin", "rateToUnderlying", "rateToUsd", "timestamp"]
              }
            },
            "required": ["data"]
          }
        ]
      }
    }
  },
  "tags": [
    {
      "name": "Health",
      "description": "Health check endpoints"
    },
    {
      "name": "Funding",
      "description": "Funding rates endpoints for perp markets"
    },
    {
      "name": "APY",
      "description": "APY (Annual Percentage Yield) endpoints for different stablecoins"
    },
    {
      "name": "Stablecoin",
      "description": "Stablecoin mint and burn transaction generation endpoints"
    },
    {
      "name": "Integration",
      "description": "Integration management endpoints for custom stablecoin integrations"
    }
  ]
} 